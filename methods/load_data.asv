function [ft_data, order] = load_data(main_path, filename, n_participants, onsets_part)

    ft_data = {};
    idx_used_for_saving_data = 1;
    order = [];

    p1_data = {};
    p2_data = {};
    p3_data = {};

    on_23_p1 = {};
    on_23_p2 = {};
    on_23_p3 = {};
    on_45_p1 = {};
    on_45_p2 = {};
    on_45_p3 = {};
    on_67_p1 = {};
    on_67_p2 = {};
    on_67_p3 = {};

    % breaks up into 3 filenames for all onsets
    if strcmp(onsets_part, 'onsets-23-45-67') || strcmp(onsets_part, 'partitions_vs_onsets')
        a = string(filename);
        b = split(filename, '_');
        c = b(end);
        d = b(1:5);

        e = [d; {'2'; '3'}; c];
        f = [d; {'4'; '5'}; c];
        g = [d; {'6'; '7'}; c];

        filename = join(e, "_");
        filename2 = join(f, "_");
        filename3 = join(g, "_");
    end

    for index = 1:n_participants
        fprintf('LOADING %d/%d \n', index, n_participants);
        participant_main_path = strcat(main_path, int2str(index));

        if exist(participant_main_path, 'dir')
            cd(participant_main_path);

            if iscell(filename)
                filename = filename{1};
                filename2 = filename2{1};
                filename3 = filename3{1};
            end

            if isfile(filename)
                load(filename);
                order(end + 1) = index;
            else
                continue;
            end

            if strcmp(onsets_part, 'onsets') || strcmp(onsets_part, 'eyes')
                ft.label = data.label;
                ft.time = data.time{1};
                ft.trialinfo = [1];
                ft.elec = data.elec;
                ft.dimord = 'chan_time';
                % removes crash when using single trials
                if ~iscell(data.med)
                    pgi = data.med - (data.thin + data.thick) / 2;
                    ft.avg = pgi;
                else
                    data.med = data.med(2:end);
                    data.thin = data.thin(2:end);
                    data.thick = data.thick(2:end);
                    pgi = {};
                    mindat = min([length(data.med), length(data.thin), length(data.thick)]);

                    for i = 1:mindat
                        pgi{i} = data.med{i} - (data.thin{i} + data.thick{i}) / 2;
                    end

                    ft.avg = pgi;
                end

                ft.thin = data.thin;
                ft.med = data.med;
                ft.thick = data.thick;

                ft_data{idx_used_for_saving_data} = ft;
            elseif strcmp(onsets_part, 'partition1')

                ft.label = data.label;
                ft.time = data.time{1};
                ft.trialinfo = [1];
                ft.elec = data.elec;
                ft.dimord = 'chan_time';
                ft.thin = data.p1_thin;
                ft.med = data.p1_med;
                ft.thick = data.p1_thick;
                ft.avg = data.p1_pgi;

                ft_data{idx_used_for_saving_data} = ft;
            elseif strcmp(onsets_part, 'partitions_vs_onsets')   
                
                part1.label = data.label;
                part1.time = data.time{1};
                part1.trialinfo = [1];
                part1.elec = data.elec;
                part1.dimord = 'chan_time';
                part1.thin = data.thin;
                part1.med = data.med;
                part1.thick = data.thick;

                part1.avg = data.med - (data.thin + data.thick) / 2;

                data2 = load(filename2).data;

                part2.label = data2.label;
                part2.time = data2.time{1};
                part2.trialinfo = [1];
                part2.elec = data2.elec;
                part2.dimord = 'chan_time';
                part2.thin = data2.thin;
                part2.med = data2.med;
                part2.thick = data2.thick;

                part2.avg = data2.med - (data2.thin + data2.thick) / 2;

                data3 = load(filename3).data;

                part3.label = data3.label;
                part3.time = data3.time{1};
                part3.trialinfo = [1];
                part3.elec = data3.elec;
                part3.dimord = 'chan_time';
                part3.thin = data3.thin;
                part3.med = data3.med;
                part3.thick = data3.thick;

                part3.avg = data3.med - (data3.thin + data3.thick) / 2;

                if(contains(filename, '2_3'))
                    on_23_p1{end + 1} = part1;
                    on_23_p2{end + 1} = part2;
                    on_23_p3{end + 1} = part3;
                elseif(contains(filename, '4_5'))
                    on_45_p1{end + 1} = part1;
                    on_45_p2{end + 1} = part2;
                    on_45_p3{end + 1} = part3;
                elseif(contains(filename, '6_7'))
                    on_67_p1{end + 1} = part1;
                    on_67_p2{end + 1} = part2;
                    on_67_p3{end + 1} = part3;
                end


                


            elseif strcmp(onsets_part, 'partitions')
                %% stores in struct of structs for each partition for reusability of onsets functions
                part1.label = data.label;
                part1.time = data.time{1};
                part1.trialinfo = [1];
                part1.elec = data.elec;
                part1.dimord = 'chan_time';
                part1.thin = data.p1_thin;
                part1.med = data.p1_med;
                part1.thick = data.p1_thick;

                if isfield(data, 'p1_pgi')
                    part1.avg = data.p1_pgi;
                end

                part2.label = data.label;
                part2.time = data.time{1};
                part2.trialinfo = [1];
                part2.elec = data.elec;
                part2.dimord = 'chan_time';
                part2.thin = data.p2_thin;
                part2.med = data.p2_med;
                part2.thick = data.p2_thick;

                if isfield(data, 'p2_pgi')
                    part2.avg = data.p2_pgi;
                end

                part3.label = data.label;
                part3.time = data.time{1};
                part3.trialinfo = [1];
                part3.elec = data.elec;
                part3.dimord = 'chan_time';
                part3.thin = data.p3_thin;
                part3.med = data.p3_med;
                part3.thick = data.p3_thick;

                if isfield(data, 'p3_pgi')
                    part3.avg = data.p3_pgi;
                end

                p1_data{idx_used_for_saving_data} = part1;
                p2_data{idx_used_for_saving_data} = part2;
                p3_data{idx_used_for_saving_data} = part3;
            else
                part1.label = data.label;
                part1.time = data.time{1};
                part1.trialinfo = [1];
                part1.elec = data.elec;
                part1.dimord = 'chan_time';
                part1.thin = data.thin;
                part1.med = data.med;
                part1.thick = data.thick;

                part1.avg = data.med - (data.thin + data.thick) / 2;

                data2 = load(filename2).data;

                part2.label = data2.label;
                part2.time = data2.time{1};
                part2.trialinfo = [1];
                part2.elec = data2.elec;
                part2.dimord = 'chan_time';
                part2.thin = data2.thin;
                part2.med = data2.med;
                part2.thick = data2.thick;

                part2.avg = data2.med - (data2.thin + data2.thick) / 2;

                data3 = load(filename3).data;

                part3.label = data3.label;
                part3.time = data3.time{1};
                part3.trialinfo = [1];
                part3.elec = data3.elec;
                part3.dimord = 'chan_time';
                part3.thin = data3.thin;
                part3.med = data3.med;
                part3.thick = data3.thick;

                part3.avg = data3.med - (data3.thin + data3.thick) / 2;

                p1_data{idx_used_for_saving_data} = part1;
                p2_data{idx_used_for_saving_data} = part2;
                p3_data{idx_used_for_saving_data} = part3;
            end

            idx_used_for_saving_data = idx_used_for_saving_data + 1;
        end

    end

    if ~strcmp(onsets_part, 'onsets') && ~strcmp(onsets_part, 'eyes') && ~strcmp(onsets_part, 'partition1') && ~strcmp(onsets_part, 'partitions_vs_onsets')
        ft_data.part1 = p1_data;
        ft_data.part2 = p2_data;
        ft_data.part3 = p3_data;
    elseif strcmp(onsets_part, 'partitions_vs_onsets')

        p1.part1 = on_23_p1;
        p1.part2 = on_45_p1;
        p1.part3 = on_67_p1;

        p2.part1 = on_23_p2;
        p2.part2 = on_45_p2;
        p2.part3 = on_67_p2;

        p3.part1 = on_23_p3;
        p3.part2 = on_45_p3;
        p3.part3 = on_67_p3;

        ft_data.part1 = p1;
        ft_data.part2 = p2;
        ft_data.part3 = p3;
    end

end